{
  "name": "Kafka Demo API",
  "crossId": "0d069f56-c9a9-4979-869f-56c9a9f979a5",
  "version": "1.0.0",
  "description": "Apidays Helsinki & North 2022",
  "visibility": "PUBLIC",
  "gravitee": "2.0.0",
  "flow_mode": "DEFAULT",
  "resources": [],
  "properties": [],
  "members": [
    {
      "source": "memory",
      "sourceId": "admin",
      "roles": [
        "e724aede-121c-43c2-a4ae-de121cc3c261"
      ]
    }
  ],
  "pages": [
    {
      "id": "b27f7a70-2de6-44dc-bf7a-702de6a4dc8b",
      "crossId": "82726ece-28c7-4557-b26e-ce28c76557b3",
      "name": "Aside",
      "type": "SYSTEM_FOLDER",
      "order": 0,
      "published": true,
      "visibility": "PUBLIC",
      "lastModificationDate": 1647395783737,
      "contentType": "application/json",
      "homepage": false,
      "parentPath": "",
      "excludedAccessControls": false,
      "accessControls": [],
      "api": "73899ac6-acb0-4b87-899a-c6acb0fb87e3",
      "attached_media": []
    },
    {
      "id": "14ec2408-c38e-4c45-ac24-08c38e2c4586",
      "crossId": "082ab928-d35a-4288-aab9-28d35a62888f",
      "name": "Technical Documentation",
      "type": "ASYNCAPI",
      "content": "asyncapi: '2.1.0'\ninfo:\n  title: Kafka Test\n  version: 1.0.0\n  description: Example of how to expose Kafka topics via WebScoket and REST API using Gravitee.io Kafka Connector.\nservers:\n  production:\n    url: \"dorian-dev-demo-apim-gateway.cloud.gravitee.io/test-kafka\"\n    protocol: ws\n    description: Demo attendees broker.\n    security:\n      - apiKey: []\nchannels:\n  attendees:\n    subscribe:\n      message:\n        $ref: '#/components/messages/attendees'\ncomponents:\n  messages:\n    attendees:\n      payload:\n        type: object\n        properties:\n          firstname:\n            type: string\n            description: The attendee's firstname\n            example: Dorian\n          lastname:\n            type: string\n            format: email\n            description: The attendee's lastname\n            example: Blanc\n          company:\n            type: string\n            description: The attendee's company\n            example: Gravitee.io\n  securitySchemes:\n    apiKey:\n      type: httpApiKey      \n      in: query\n      name: \"api-key\"",
      "order": 1,
      "lastContributor": "75097ffb-48a6-4ae9-897f-fb48a62ae93b",
      "published": true,
      "visibility": "PUBLIC",
      "lastModificationDate": 1647395783897,
      "contentType": "text/yaml",
      "homepage": false,
      "parentPath": "",
      "excludedAccessControls": false,
      "accessControls": [],
      "api": "73899ac6-acb0-4b87-899a-c6acb0fb87e3",
      "attached_media": []
    }
  ],
  "plans": [
    {
      "id": "cf2e0282-204c-4e9e-ae02-82204c1e9e0c",
      "crossId": "234c8207-afb5-408f-8c82-07afb5008f7b",
      "name": "API Key",
      "description": "Plan protected by an API Key",
      "validation": "MANUAL",
      "security": "API_KEY",
      "securityDefinition": "{}",
      "type": "API",
      "status": "PUBLISHED",
      "api": "73899ac6-acb0-4b87-899a-c6acb0fb87e3",
      "order": 1,
      "characteristics": [],
      "created_at": 1647395386347,
      "updated_at": 1647395783148,
      "published_at": 1647395392957,
      "paths": {},
      "flows": [
        {
          "name": "",
          "path-operator": {
            "path": "/",
            "operator": "STARTS_WITH"
          },
          "condition": "",
          "consumers": [],
          "methods": [],
          "pre": [],
          "post": [],
          "enabled": true
        }
      ],
      "comment_required": false
    }
  ],
  "metadata": [
    {
      "key": "product-ref",
      "name": "Product Ref",
      "format": "STRING",
      "defaultValue": "XXXXX",
      "apiId": "73899ac6-acb0-4b87-899a-c6acb0fb87e3"
    },
    {
      "key": "email-support",
      "name": "email-support",
      "format": "MAIL",
      "value": "${(api.primaryOwner.email)!''}",
      "defaultValue": "support@change.me",
      "apiId": "73899ac6-acb0-4b87-899a-c6acb0fb87e3"
    }
  ],
  "id": "73899ac6-acb0-4b87-899a-c6acb0fb87e3",
  "path_mappings": [],
  "proxy": {
    "virtual_hosts": [
      {
        "path": "/test-kafka/"
      }
    ],
    "strip_context_path": false,
    "preserve_host": false,
    "logging": {
      "mode": "CLIENT_PROXY",
      "content": "HEADERS_PAYLOADS",
      "scope": "REQUEST_RESPONSE"
    },
    "groups": [
      {
        "name": "default-group",
        "endpoints": [
          {
            "tenants": [],
            "backup": false,
            "common": {
              "clientDnsLookup": "USE_ALL_DNS_IPS"
            },
            "inherit": false,
            "name": "default",
            "weight": 1,
            "producer": {
              "retryBackoffMs": 100,
              "metadataMaxAgeMs": 30000,
              "partitionerClass": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
              "reconnectBackoffMs": 50,
              "metricsSampleWindowMs": 30000,
              "transactionalId": "",
              "compressionType": "none",
              "receiveBufferBytes": 32768,
              "metricsRecordingLevel": "INFO",
              "metadataMaxIdleMs": 300000,
              "keySerializer": "org.apache.kafka.common.serialization.StringSerializer",
              "reconnectBackoffMaxMs": 1000,
              "lingerMs": 0,
              "securityProtocol": "PLAINTEXT",
              "sendBufferBytes": 131072,
              "connectionsMaxIdleMs": 540000,
              "metricsNumSamples": 2,
              "clientId": "",
              "maxRequestSize": 1048576,
              "maxInFlightRequestsPerConnection": 5,
              "acks": "1",
              "valueSerializer": "org.apache.kafka.common.serialization.StringSerializer",
              "enableIdempotence": false,
              "deliveryTimeoutMs": 120000,
              "retries": 2147483647,
              "bufferMemory": 33554432,
              "requestTimeoutMs": 30000,
              "transactionTimeoutMs": 60000,
              "batchSize": 16384,
              "maxBlockMs": 60000
            },
            "type": "kafka",
            "consumer": {
              "fetchMaxWaitMs": 500,
              "retryBackoffMs": 100,
              "metadataMaxAgeMs": 300000,
              "maxPollIntervalMs": 300000,
              "reconnectBackoffMs": 50,
              "metricsSampleWindowMs": 30000,
              "receiveBufferBytes": 65536,
              "fetchMinBytes": 1,
              "metricsRecordingLevel": "INFO",
              "allowAutoCreateTopics": true,
              "reconnectBackoffMaxMs": 1000,
              "valueDeserializer": "org.apache.kafka.common.serialization.StringDeserializer",
              "maxPartitionFetchBytes": 1048576,
              "securityProtocol": "PLAINTEXT",
              "autoCommitIntervalMs": 5000,
              "sessionTimeoutMs": 10000,
              "sendBufferBytes": 131072,
              "defaultApiTimeoutMs": 3600000,
              "heartbeatIntervalMs": 3000,
              "checkCRCS": true,
              "connectionsMaxIdleMs": 540000,
              "metricsNumSamples": 2,
              "clientId": "",
              "autoOffsetReset": "latest",
              "requestTimeoutMs": 30000,
              "excludeInternalTopics": true,
              "clientRack": "",
              "enableAutoCommit": true,
              "fetchMaxBytes": 52428800,
              "maxPollRecords": 500,
              "isolationLevel": "READ_UNCOMMITTED",
              "keyDeserializer": "org.apache.kafka.common.serialization.StringDeserializer",
              "partitionAssignmentStrategy": "org.apache.kafka.clients.consumer.RangeAssignor"
            },
            "target": "demo-gravitee.dobl.fr:9094"
          }
        ],
        "load_balancing": {
          "type": "ROUND_ROBIN"
        },
        "http": {
          "connectTimeout": 5000,
          "idleTimeout": 60000,
          "keepAlive": true,
          "readTimeout": 10000,
          "pipelining": false,
          "maxConcurrentConnections": 100,
          "useCompression": true,
          "followRedirects": false
        }
      }
    ]
  },
  "response_templates": {},
  "primaryOwner": {
    "id": "75097ffb-48a6-4ae9-897f-fb48a62ae93b",
    "email": "dorian.blanc@graviteesource.com",
    "displayName": "Dorian Blanc",
    "type": "USER"
  }
}